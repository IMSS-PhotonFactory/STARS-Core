ﾕｰｻﾞｰが作成したﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙをﾃｽﾄ、ﾃﾞﾊﾞｯｸﾞし、さらにﾊﾞｸﾞのないｺｰﾄﾞを作成するために必要な手順を以下に示します。

A) 作成したﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙ用のﾃｽﾄ ﾌﾟﾛｸﾞﾗﾑを作成します。

ﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙを標準 EXE に作成したか、ActiveX ｺﾝﾄﾛｰﾙ ﾌﾟﾛｼﾞｪｸﾄに作成したかによって、ﾃｽﾄ ﾌﾟﾛｸﾞﾗﾑをｾｯﾄｱｯﾌﾟする方法は 2 種類あります。

ActiveX ｺﾝﾄﾛｰﾙ ﾌﾟﾛｼﾞｪｸﾄを作成した場合は、以下の手順でﾃｽﾄ ﾌﾟﾛｸﾞﾗﾑをｾｯﾄｱｯﾌﾟします:

1)  作成したﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙを保存します。
2)  ﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙ ﾃﾞｻﾞｲﾅを閉じ、ｺﾝﾄﾛｰﾙを実行ﾓｰﾄﾞにします。
3)  ﾃｽﾄ ﾌﾟﾛｼﾞｪｸﾄをまだ作成していない場合は、[ﾌｧｲﾙ] ﾒﾆｭｰの [ﾌﾟﾛｼﾞｪｸﾄの追加] をｸﾘｯｸし、標準 EXE ﾌﾟﾛｼﾞｪｸﾄを追加します。
4)  [ﾂｰﾙﾎﾞｯｸｽ] でﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙのｱｲｺﾝをﾀﾞﾌﾞﾙｸﾘｯｸし、標準 EXE ﾌﾟﾛｼﾞｪｸﾄの Form1 にﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙのｲﾝｽﾀﾝｽを配置します。  必要に応じて、ｺﾝﾄﾛｰﾙの位置とｻｲｽﾞを変更できます。
5)  ﾌﾟﾛｼﾞｪｸﾄ ｸﾞﾙｰﾌﾟを保存します。 開発の後半およびﾃｽﾄ ｾｯｼｮﾝで、ﾌﾟﾛｼﾞｪｸﾄ ｸﾞﾙｰﾌﾟを開くことにより、両方のﾌﾟﾛｼﾞｪｸﾄを一度に開くことができます。 

ﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙを既存の標準 EXE ﾌﾟﾛｼﾞｪｸﾄに付加した場合は、以下の手順でﾃｽﾄ ﾌﾟﾛｸﾞﾗﾑをｾｯﾄｱｯﾌﾟします:

1)  作成したﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙを保存します。
2)  ﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙ ﾃﾞｻﾞｲﾅを閉じ、ｺﾝﾄﾛｰﾙを実行ﾓｰﾄﾞにします。
3)  [ﾌﾟﾛｼﾞｪｸﾄ] ｳｨﾝﾄﾞｳで標準 EXE ﾌﾟﾛｼﾞｪｸﾄの Form1 をﾀﾞﾌﾞﾙｸﾘｯｸし、ﾌｫｰﾑのﾃﾞｻﾞｲﾅをｵｰﾌﾟﾝします。
4)  [ﾂｰﾙﾎﾞｯｸｽ] でﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙのｱｲｺﾝをﾀﾞﾌﾞﾙｸﾘｯｸし、Form1 にﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙのｲﾝｽﾀﾝｽを配置します。  必要に応じて、ｺﾝﾄﾛｰﾙの位置とｻｲｽﾞを変更できます。

B) ﾃﾞｻﾞｲﾝ時および実行時に作成したｺﾝﾄﾛｰﾙの動作をﾃｽﾄします。

1)  ﾃｽﾄ ﾌﾟﾛｼﾞｪｸﾄの Form1 に配置したｺﾝﾄﾛｰﾙを選択し、F4 ｷｰを押して [ﾌﾟﾛﾊﾟﾃｨ] ｳｨﾝﾄﾞｳを開きます。 作成したｺﾝﾄﾛｰﾙに追加したﾌﾟﾛﾊﾟﾃｨを表示、確認し、変更することができます。
2)  Form1 を閉じ、再度開くことにより、ｺﾝﾄﾛｰﾙのﾌﾟﾛﾊﾟﾃｨ値が正しく保存され、取得されることを確認できます。
3)  Form1 に配置したｺﾝﾄﾛｰﾙをﾀﾞﾌﾞﾙｸﾘｯｸし、[ｺｰﾄﾞ] ｳｨﾝﾄﾞｳの右側 (ﾌﾟﾛｼｰｼﾞｬ) のﾄﾞﾛｯﾌﾟ ﾀﾞｳﾝ ﾘｽﾄに適切なｲﾍﾞﾝﾄが表示されることを確認します。
4)  作成したｺﾝﾄﾛｰﾙのｲﾍﾞﾝﾄ ﾌﾟﾛｼｰｼﾞｬにﾃｽﾄ ｺｰﾄﾞを追加します。
5)  その他のｺﾝﾄﾛｰﾙを追加し、作成したｺﾝﾄﾛｰﾙのﾌﾟﾛﾊﾟﾃｨとﾒｿｯﾄﾞの実行時の動作をﾃｽﾄするためのｺｰﾄﾞを追加したｺﾝﾄﾛｰﾙのｲﾍﾞﾝﾄ ﾌﾟﾛｼｰｼﾞｬに記述します。
6)  F5 ｷｰを押してﾃｽﾄ ﾌﾟﾛｼﾞｪｸﾄを実行し、ｺﾝﾄﾛｰﾙの実行時の動作をﾃｽﾄします。

C) ﾊﾞｸﾞのない、機能を満足するｺﾝﾄﾛｰﾙを作成するには (ｳｨｻﾞｰﾄﾞが追加したｺｰﾄﾞには詳細なｺｰﾄﾞは含まれません)

1)  ﾕｰｻﾞｰのﾌｫｰﾑを構成するｺﾝﾄﾛｰﾙが複数あるときに、一部のｲﾍﾞﾝﾄおよびﾌﾟﾛﾊﾟﾃｨをﾌｫｰﾑ上の複数のｺﾝﾄﾛｰﾙにﾏｯﾌﾟすることが必要な場合があります。たとえば、BackColor ﾌﾟﾛﾊﾟﾃｨをﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙとﾗﾍﾞﾙ ｺﾝﾄﾛｰﾙの両方の BackColor ﾌﾟﾛﾊﾟﾃｨにﾏｯﾌﾟしたり、MouseMove ｲﾍﾞﾝﾄをﾌｫｰﾑ上のすべてのｺﾝﾄﾛｰﾙの MouseMove ｲﾍﾞﾝﾄにﾏｯﾌﾟする必要があります。
2)  MouseMove ｲﾍﾞﾝﾄなど、X 座標と Y 座標を指定するすべてのｲﾍﾞﾝﾄに対して座標変換を追加します。
3)  列挙値を持つすべてのﾌﾟﾛﾊﾟﾃｨ (例、MousePointer や BorderStyle) に対して、ﾌﾟﾛﾊﾟﾃｨのﾃﾞｰﾀ型を列挙名 (この例では MousePointerConstants や BorderStyleConstants) に変更し、[ﾌﾟﾛﾊﾟﾃｨ] ｳｨﾝﾄﾞｳに列挙要素が表示されるようにします。
4)  ﾕｰｻﾞｰ独自のﾌﾟﾛﾊﾟﾃｨに必要な独自の列挙値を追加し、その値を評価するｺｰﾄﾞを追加します。
5)  ReadProperties ｲﾍﾞﾝﾄにｴﾗｰをﾄﾗｯﾌﾟするｺｰﾄﾞを追加し、.frm ﾌｧｲﾙを手作業で編集することにより混入する可能性のある不正な値や無効なﾃﾞｰﾀ型を防ぎます。このようなｴﾗｰが発生したときに設定を既定値に切り替えるｺｰﾄﾞをﾌﾟﾛﾊﾟﾃｨごとに追加します。(MSDN の「ｺﾝﾄﾛｰﾙのﾌﾟﾛﾊﾟﾃｨの保存」および「ﾃﾞｻﾞｲﾝ時専用、実行時専用、および実行時の取得専用のﾌﾟﾛﾊﾟﾃｨの作成」を参照してください。)
6)  ﾌｫｰﾑ上のｺﾝﾄﾛｰﾙが複数ある場合、あるｺﾝﾄﾛｰﾙのｻｲｽﾞが変更されたときに複数のｺﾝﾄﾛｰﾙのｻｲｽﾞを変更するために、UserControl_Resize ﾌﾟﾛｼｰｼﾞｬにｺｰﾄﾞを追加します。
7)  Enabled ﾌﾟﾛﾊﾟﾃｨ用のﾌﾟﾛｼｰｼﾞｬ ID を設定します。これにより、ﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙが有効または無効になるときにほかの ActiveX ｺﾝﾄﾛｰﾙと同じように動作します。
8)  ｳｨｻﾞｰﾄﾞは、ﾕｰｻﾞｰのｺﾝﾄﾛｰﾙのﾌﾟﾛﾊﾟﾃｨを、内在ｺﾝﾄﾛｰﾙ (またはﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙ) の名前が似ているﾌﾟﾛﾊﾟﾃｨにﾏｯﾌﾟします。場合によっては、別の名前のﾌﾟﾛﾊﾟﾃｨにﾏｯﾌﾟしたいときもあります。たとえば、ShapeLabel というｺﾝﾄﾛｰﾙの BackColor ﾌﾟﾛﾊﾟﾃｨを、内在するｼｪｲﾌﾟ ｺﾝﾄﾛｰﾙの FillColor ﾌﾟﾛﾊﾟﾃｨにﾏｯﾌﾟするという場合があります。この再ﾏｯﾋﾟﾝｸﾞは手作業で行います。
9)  ﾕｰｻﾞｰのｺﾝﾄﾛｰﾙのｻｲｽﾞに影響する任意のﾌﾟﾛﾊﾟﾃｨ (AutoSize ﾌﾟﾛﾊﾟﾃｨを持つｺﾝﾄﾛｰﾙ内のﾌｫﾝﾄ ｻｲｽﾞなど) は、Property Let からﾕｰｻﾞｰのｻｲｽﾞ変更のｺｰﾄﾞを呼び出す必要があります。
10) ﾕｰｻﾞｰ描画ｺﾝﾄﾛｰﾙでは、ﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙの Paint ｲﾍﾞﾝﾄにｺﾝﾄﾛｰﾙの外観を描画するｺｰﾄﾞを追加します。(MSDN の「ﾕｰｻﾞｰ描画ｺﾝﾄﾛｰﾙ」および「ｺﾝﾄﾛｰﾙでのﾌｫｰｶｽの処理」を参照してください。)
11)  ｺﾝﾄﾛｰﾙの 1 つ以上のﾌﾟﾛﾊﾟﾃｨがﾃﾞｰﾀに連結されている場合は、MSDN の「ｺﾝﾄﾛｰﾙとﾃﾞｰﾀ ｿｰｽの連結」を参照してください。
12)  ｺﾝﾄﾛｰﾙに機能を追加します。MSDN の「Visual Basic ActiveX ｺﾝﾄﾛｰﾙの機能」内のﾄﾋﾟｯｸを一読すると役に立つ項目が見つかります。

(これらの作業項目の例については、CtlPlus.vbg ｻﾝﾌﾟﾙ ｱﾌﾟﾘｹｰｼｮﾝを参照してください。)

ｳｨｻﾞｰﾄﾞを再度実行し、作成したﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙを選択することにより、作成したｺﾝﾄﾛｰﾙを修正できます。

ﾌﾟﾛﾊﾟﾃｨ ﾍﾟｰｼﾞ ｳｨｻﾞｰﾄﾞを使用して、ﾕｰｻﾞｰ ｺﾝﾄﾛｰﾙのﾌﾟﾛﾊﾟﾃｨ ﾍﾟｰｼﾞを作成できます。

ActiveX ｺﾝﾄﾛｰﾙの作成とﾃｽﾄの詳細については、MSDN の「ActiveX ｺﾝﾄﾛｰﾙの作成手順」および「ActiveX ｺﾝﾄﾛｰﾙの作成技術」を参照してください。

さらに、MSDN の「ｺﾝﾎﾟｰﾈﾝﾄ設計の基本概念」および「ｺﾝﾎﾟｰﾈﾝﾄのﾃﾞﾊﾞｯｸﾞ、ﾃｽﾄ、配置」にも役に立つ情報が記述されています。

